<?xml version="1.0" encoding="UTF-8"?>
<testsuite xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="https://maven.apache.org/surefire/maven-surefire-plugin/xsd/surefire-test-report.xsd" name="ru.yandex.practicum.filmorate.MostPopularIntegrationTest" time="0.385" tests="4" errors="0" skipped="0" failures="4">
  <properties>
    <property name="java.specification.version" value="19"/>
    <property name="sun.cpu.isalist" value="amd64"/>
    <property name="sun.jnu.encoding" value="Cp1251"/>
    <property name="java.class.path" value="E:\MyProjact\java-filmorate-11\target\test-classes;E:\MyProjact\java-filmorate-11\target\classes;E:\MyProjact\.m2\repository\org\springframework\boot\spring-boot-starter-data-jdbc\3.0.4\spring-boot-starter-data-jdbc-3.0.4.jar;E:\MyProjact\.m2\repository\org\springframework\boot\spring-boot-starter-jdbc\2.7.3\spring-boot-starter-jdbc-2.7.3.jar;E:\MyProjact\.m2\repository\com\zaxxer\HikariCP\4.0.3\HikariCP-4.0.3.jar;E:\MyProjact\.m2\repository\org\springframework\data\spring-data-jdbc\2.4.2\spring-data-jdbc-2.4.2.jar;E:\MyProjact\.m2\repository\org\springframework\data\spring-data-relational\2.4.2\spring-data-relational-2.4.2.jar;E:\MyProjact\.m2\repository\org\springframework\data\spring-data-commons\2.7.2\spring-data-commons-2.7.2.jar;E:\MyProjact\.m2\repository\org\springframework\spring-context\5.3.22\spring-context-5.3.22.jar;E:\MyProjact\.m2\repository\org\slf4j\slf4j-api\1.7.36\slf4j-api-1.7.36.jar;E:\MyProjact\.m2\repository\org\springframework\spring-jdbc\6.0.6\spring-jdbc-6.0.6.jar;E:\MyProjact\.m2\repository\org\springframework\spring-beans\5.3.22\spring-beans-5.3.22.jar;E:\MyProjact\.m2\repository\org\springframework\spring-core\5.3.22\spring-core-5.3.22.jar;E:\MyProjact\.m2\repository\org\springframework\spring-jcl\5.3.22\spring-jcl-5.3.22.jar;E:\MyProjact\.m2\repository\org\springframework\spring-tx\5.3.22\spring-tx-5.3.22.jar;E:\MyProjact\.m2\repository\com\mysql\mysql-connector-j\8.0.33\mysql-connector-j-8.0.33.jar;E:\MyProjact\.m2\repository\org\springframework\boot\spring-boot-starter-web\3.0.4\spring-boot-starter-web-3.0.4.jar;E:\MyProjact\.m2\repository\org\springframework\boot\spring-boot-starter\2.7.3\spring-boot-starter-2.7.3.jar;E:\MyProjact\.m2\repository\org\springframework\boot\spring-boot\2.7.3\spring-boot-2.7.3.jar;E:\MyProjact\.m2\repository\org\springframework\boot\spring-boot-autoconfigure\2.7.3\spring-boot-autoconfigure-2.7.3.jar;E:\MyProjact\.m2\repository\org\springframework\boot\spring-boot-starter-logging\2.7.3\spring-boot-starter-logging-2.7.3.jar;E:\MyProjact\.m2\repository\ch\qos\logback\logback-classic\1.2.11\logback-classic-1.2.11.jar;E:\MyProjact\.m2\repository\ch\qos\logback\logback-core\1.2.11\logback-core-1.2.11.jar;E:\MyProjact\.m2\repository\org\apache\logging\log4j\log4j-to-slf4j\2.17.2\log4j-to-slf4j-2.17.2.jar;E:\MyProjact\.m2\repository\org\apache\logging\log4j\log4j-api\2.17.2\log4j-api-2.17.2.jar;E:\MyProjact\.m2\repository\org\slf4j\jul-to-slf4j\1.7.36\jul-to-slf4j-1.7.36.jar;E:\MyProjact\.m2\repository\jakarta\annotation\jakarta.annotation-api\1.3.5\jakarta.annotation-api-1.3.5.jar;E:\MyProjact\.m2\repository\org\yaml\snakeyaml\1.30\snakeyaml-1.30.jar;E:\MyProjact\.m2\repository\org\springframework\boot\spring-boot-starter-json\2.7.3\spring-boot-starter-json-2.7.3.jar;E:\MyProjact\.m2\repository\com\fasterxml\jackson\core\jackson-databind\2.13.3\jackson-databind-2.13.3.jar;E:\MyProjact\.m2\repository\com\fasterxml\jackson\core\jackson-annotations\2.13.3\jackson-annotations-2.13.3.jar;E:\MyProjact\.m2\repository\com\fasterxml\jackson\core\jackson-core\2.13.3\jackson-core-2.13.3.jar;E:\MyProjact\.m2\repository\com\fasterxml\jackson\datatype\jackson-datatype-jdk8\2.13.3\jackson-datatype-jdk8-2.13.3.jar;E:\MyProjact\.m2\repository\com\fasterxml\jackson\datatype\jackson-datatype-jsr310\2.13.3\jackson-datatype-jsr310-2.13.3.jar;E:\MyProjact\.m2\repository\com\fasterxml\jackson\module\jackson-module-parameter-names\2.13.3\jackson-module-parameter-names-2.13.3.jar;E:\MyProjact\.m2\repository\org\springframework\boot\spring-boot-starter-tomcat\2.7.3\spring-boot-starter-tomcat-2.7.3.jar;E:\MyProjact\.m2\repository\org\apache\tomcat\embed\tomcat-embed-core\9.0.65\tomcat-embed-core-9.0.65.jar;E:\MyProjact\.m2\repository\org\apache\tomcat\embed\tomcat-embed-websocket\9.0.65\tomcat-embed-websocket-9.0.65.jar;E:\MyProjact\.m2\repository\org\springframework\spring-web\5.3.22\spring-web-5.3.22.jar;E:\MyProjact\.m2\repository\org\springframework\spring-webmvc\5.3.22\spring-webmvc-5.3.22.jar;E:\MyProjact\.m2\repository\org\springframework\spring-aop\5.3.22\spring-aop-5.3.22.jar;E:\MyProjact\.m2\repository\org\springframework\spring-expression\5.3.22\spring-expression-5.3.22.jar;E:\MyProjact\.m2\repository\org\springframework\boot\spring-boot-starter-test\3.0.4\spring-boot-starter-test-3.0.4.jar;E:\MyProjact\.m2\repository\org\springframework\boot\spring-boot-test\2.7.3\spring-boot-test-2.7.3.jar;E:\MyProjact\.m2\repository\org\springframework\boot\spring-boot-test-autoconfigure\2.7.3\spring-boot-test-autoconfigure-2.7.3.jar;E:\MyProjact\.m2\repository\com\jayway\jsonpath\json-path\2.7.0\json-path-2.7.0.jar;E:\MyProjact\.m2\repository\net\minidev\json-smart\2.4.8\json-smart-2.4.8.jar;E:\MyProjact\.m2\repository\net\minidev\accessors-smart\2.4.8\accessors-smart-2.4.8.jar;E:\MyProjact\.m2\repository\org\ow2\asm\asm\9.1\asm-9.1.jar;E:\MyProjact\.m2\repository\jakarta\xml\bind\jakarta.xml.bind-api\2.3.3\jakarta.xml.bind-api-2.3.3.jar;E:\MyProjact\.m2\repository\jakarta\activation\jakarta.activation-api\1.2.2\jakarta.activation-api-1.2.2.jar;E:\MyProjact\.m2\repository\org\assertj\assertj-core\3.22.0\assertj-core-3.22.0.jar;E:\MyProjact\.m2\repository\org\hamcrest\hamcrest\2.2\hamcrest-2.2.jar;E:\MyProjact\.m2\repository\org\junit\jupiter\junit-jupiter\5.8.2\junit-jupiter-5.8.2.jar;E:\MyProjact\.m2\repository\org\mockito\mockito-core\4.5.1\mockito-core-4.5.1.jar;E:\MyProjact\.m2\repository\net\bytebuddy\byte-buddy-agent\1.12.13\byte-buddy-agent-1.12.13.jar;E:\MyProjact\.m2\repository\org\objenesis\objenesis\3.2\objenesis-3.2.jar;E:\MyProjact\.m2\repository\org\mockito\mockito-junit-jupiter\4.5.1\mockito-junit-jupiter-4.5.1.jar;E:\MyProjact\.m2\repository\org\skyscreamer\jsonassert\1.5.1\jsonassert-1.5.1.jar;E:\MyProjact\.m2\repository\com\vaadin\external\google\android-json\0.0.20131108.vaadin1\android-json-0.0.20131108.vaadin1.jar;E:\MyProjact\.m2\repository\org\springframework\spring-test\5.3.22\spring-test-5.3.22.jar;E:\MyProjact\.m2\repository\org\xmlunit\xmlunit-core\2.9.0\xmlunit-core-2.9.0.jar;E:\MyProjact\.m2\repository\org\projectlombok\lombok\1.18.26\lombok-1.18.26.jar;E:\MyProjact\.m2\repository\org\springframework\boot\spring-boot-starter-validation\3.0.4\spring-boot-starter-validation-3.0.4.jar;E:\MyProjact\.m2\repository\org\apache\tomcat\embed\tomcat-embed-el\9.0.65\tomcat-embed-el-9.0.65.jar;E:\MyProjact\.m2\repository\org\hibernate\validator\hibernate-validator\6.2.4.Final\hibernate-validator-6.2.4.Final.jar;E:\MyProjact\.m2\repository\com\h2database\h2\2.1.214\h2-2.1.214.jar;E:\MyProjact\.m2\repository\jakarta\persistence\jakarta.persistence-api\2.2.3\jakarta.persistence-api-2.2.3.jar;E:\MyProjact\.m2\repository\jakarta\transaction\jakarta.transaction-api\1.3.3\jakarta.transaction-api-1.3.3.jar;E:\MyProjact\.m2\repository\org\jboss\logging\jboss-logging\3.4.3.Final\jboss-logging-3.4.3.Final.jar;E:\MyProjact\.m2\repository\org\hibernate\common\hibernate-commons-annotations\6.0.6.Final\hibernate-commons-annotations-6.0.6.Final.jar;E:\MyProjact\.m2\repository\io\smallrye\jandex\3.0.5\jandex-3.0.5.jar;E:\MyProjact\.m2\repository\com\fasterxml\classmate\1.5.1\classmate-1.5.1.jar;E:\MyProjact\.m2\repository\net\bytebuddy\byte-buddy\1.12.13\byte-buddy-1.12.13.jar;E:\MyProjact\.m2\repository\org\glassfish\jaxb\jaxb-runtime\2.3.6\jaxb-runtime-2.3.6.jar;E:\MyProjact\.m2\repository\org\glassfish\jaxb\txw2\2.3.6\txw2-2.3.6.jar;E:\MyProjact\.m2\repository\com\sun\istack\istack-commons-runtime\3.0.12\istack-commons-runtime-3.0.12.jar;E:\MyProjact\.m2\repository\com\sun\activation\jakarta.activation\1.2.2\jakarta.activation-1.2.2.jar;E:\MyProjact\.m2\repository\jakarta\inject\jakarta.inject-api\2.0.1\jakarta.inject-api-2.0.1.jar;E:\MyProjact\.m2\repository\org\antlr\antlr4-runtime\4.10.1\antlr4-runtime-4.10.1.jar;E:\MyProjact\.m2\repository\jakarta\validation\jakarta.validation-api\3.0.2\jakarta.validation-api-3.0.2.jar;E:\MyProjact\.m2\repository\org\junit\jupiter\junit-jupiter-engine\5.8.1\junit-jupiter-engine-5.8.1.jar;E:\MyProjact\.m2\repository\org\junit\platform\junit-platform-engine\1.8.2\junit-platform-engine-1.8.2.jar;E:\MyProjact\.m2\repository\org\apiguardian\apiguardian-api\1.1.2\apiguardian-api-1.1.2.jar;E:\MyProjact\.m2\repository\org\junit\jupiter\junit-jupiter-api\5.8.1\junit-jupiter-api-5.8.1.jar;E:\MyProjact\.m2\repository\org\opentest4j\opentest4j\1.2.0\opentest4j-1.2.0.jar;E:\MyProjact\.m2\repository\org\junit\platform\junit-platform-commons\1.8.2\junit-platform-commons-1.8.2.jar;E:\MyProjact\.m2\repository\org\junit\jupiter\junit-jupiter-params\5.8.1\junit-jupiter-params-5.8.1.jar;E:\MyProjact\.m2\repository\org\junit\platform\junit-platform-suite\1.8.1\junit-platform-suite-1.8.1.jar;E:\MyProjact\.m2\repository\org\junit\platform\junit-platform-suite-api\1.8.2\junit-platform-suite-api-1.8.2.jar;E:\MyProjact\.m2\repository\org\junit\platform\junit-platform-suite-engine\1.8.2\junit-platform-suite-engine-1.8.2.jar;E:\MyProjact\.m2\repository\org\junit\platform\junit-platform-suite-commons\1.8.2\junit-platform-suite-commons-1.8.2.jar;E:\MyProjact\.m2\repository\org\junit\platform\junit-platform-launcher\1.8.2\junit-platform-launcher-1.8.2.jar;"/>
    <property name="java.vm.vendor" value="Oracle Corporation"/>
    <property name="sun.arch.data.model" value="64"/>
    <property name="user.variant" value=""/>
    <property name="java.vendor.url" value="https://java.oracle.com/"/>
    <property name="user.timezone" value="Europe/Moscow"/>
    <property name="os.name" value="Windows 11"/>
    <property name="java.vm.specification.version" value="19"/>
    <property name="sun.java.launcher" value="SUN_STANDARD"/>
    <property name="user.country" value="RU"/>
    <property name="sun.boot.library.path" value="E:\MyProjact\.jdks\openjdk-19.0.2\bin"/>
    <property name="sun.java.command" value="C:\Users\PAWEL\AppData\Local\Temp\surefire1163268498243930366\surefirebooter18300002127380111327.jar C:\Users\PAWEL\AppData\Local\Temp\surefire1163268498243930366 2023-06-02T05-41-28_148-jvmRun1 surefire1033669153686136905tmp surefire_015284463644081271968tmp"/>
    <property name="jdk.debug" value="release"/>
    <property name="surefire.test.class.path" value="E:\MyProjact\java-filmorate-11\target\test-classes;E:\MyProjact\java-filmorate-11\target\classes;E:\MyProjact\.m2\repository\org\springframework\boot\spring-boot-starter-data-jdbc\3.0.4\spring-boot-starter-data-jdbc-3.0.4.jar;E:\MyProjact\.m2\repository\org\springframework\boot\spring-boot-starter-jdbc\2.7.3\spring-boot-starter-jdbc-2.7.3.jar;E:\MyProjact\.m2\repository\com\zaxxer\HikariCP\4.0.3\HikariCP-4.0.3.jar;E:\MyProjact\.m2\repository\org\springframework\data\spring-data-jdbc\2.4.2\spring-data-jdbc-2.4.2.jar;E:\MyProjact\.m2\repository\org\springframework\data\spring-data-relational\2.4.2\spring-data-relational-2.4.2.jar;E:\MyProjact\.m2\repository\org\springframework\data\spring-data-commons\2.7.2\spring-data-commons-2.7.2.jar;E:\MyProjact\.m2\repository\org\springframework\spring-context\5.3.22\spring-context-5.3.22.jar;E:\MyProjact\.m2\repository\org\slf4j\slf4j-api\1.7.36\slf4j-api-1.7.36.jar;E:\MyProjact\.m2\repository\org\springframework\spring-jdbc\6.0.6\spring-jdbc-6.0.6.jar;E:\MyProjact\.m2\repository\org\springframework\spring-beans\5.3.22\spring-beans-5.3.22.jar;E:\MyProjact\.m2\repository\org\springframework\spring-core\5.3.22\spring-core-5.3.22.jar;E:\MyProjact\.m2\repository\org\springframework\spring-jcl\5.3.22\spring-jcl-5.3.22.jar;E:\MyProjact\.m2\repository\org\springframework\spring-tx\5.3.22\spring-tx-5.3.22.jar;E:\MyProjact\.m2\repository\com\mysql\mysql-connector-j\8.0.33\mysql-connector-j-8.0.33.jar;E:\MyProjact\.m2\repository\org\springframework\boot\spring-boot-starter-web\3.0.4\spring-boot-starter-web-3.0.4.jar;E:\MyProjact\.m2\repository\org\springframework\boot\spring-boot-starter\2.7.3\spring-boot-starter-2.7.3.jar;E:\MyProjact\.m2\repository\org\springframework\boot\spring-boot\2.7.3\spring-boot-2.7.3.jar;E:\MyProjact\.m2\repository\org\springframework\boot\spring-boot-autoconfigure\2.7.3\spring-boot-autoconfigure-2.7.3.jar;E:\MyProjact\.m2\repository\org\springframework\boot\spring-boot-starter-logging\2.7.3\spring-boot-starter-logging-2.7.3.jar;E:\MyProjact\.m2\repository\ch\qos\logback\logback-classic\1.2.11\logback-classic-1.2.11.jar;E:\MyProjact\.m2\repository\ch\qos\logback\logback-core\1.2.11\logback-core-1.2.11.jar;E:\MyProjact\.m2\repository\org\apache\logging\log4j\log4j-to-slf4j\2.17.2\log4j-to-slf4j-2.17.2.jar;E:\MyProjact\.m2\repository\org\apache\logging\log4j\log4j-api\2.17.2\log4j-api-2.17.2.jar;E:\MyProjact\.m2\repository\org\slf4j\jul-to-slf4j\1.7.36\jul-to-slf4j-1.7.36.jar;E:\MyProjact\.m2\repository\jakarta\annotation\jakarta.annotation-api\1.3.5\jakarta.annotation-api-1.3.5.jar;E:\MyProjact\.m2\repository\org\yaml\snakeyaml\1.30\snakeyaml-1.30.jar;E:\MyProjact\.m2\repository\org\springframework\boot\spring-boot-starter-json\2.7.3\spring-boot-starter-json-2.7.3.jar;E:\MyProjact\.m2\repository\com\fasterxml\jackson\core\jackson-databind\2.13.3\jackson-databind-2.13.3.jar;E:\MyProjact\.m2\repository\com\fasterxml\jackson\core\jackson-annotations\2.13.3\jackson-annotations-2.13.3.jar;E:\MyProjact\.m2\repository\com\fasterxml\jackson\core\jackson-core\2.13.3\jackson-core-2.13.3.jar;E:\MyProjact\.m2\repository\com\fasterxml\jackson\datatype\jackson-datatype-jdk8\2.13.3\jackson-datatype-jdk8-2.13.3.jar;E:\MyProjact\.m2\repository\com\fasterxml\jackson\datatype\jackson-datatype-jsr310\2.13.3\jackson-datatype-jsr310-2.13.3.jar;E:\MyProjact\.m2\repository\com\fasterxml\jackson\module\jackson-module-parameter-names\2.13.3\jackson-module-parameter-names-2.13.3.jar;E:\MyProjact\.m2\repository\org\springframework\boot\spring-boot-starter-tomcat\2.7.3\spring-boot-starter-tomcat-2.7.3.jar;E:\MyProjact\.m2\repository\org\apache\tomcat\embed\tomcat-embed-core\9.0.65\tomcat-embed-core-9.0.65.jar;E:\MyProjact\.m2\repository\org\apache\tomcat\embed\tomcat-embed-websocket\9.0.65\tomcat-embed-websocket-9.0.65.jar;E:\MyProjact\.m2\repository\org\springframework\spring-web\5.3.22\spring-web-5.3.22.jar;E:\MyProjact\.m2\repository\org\springframework\spring-webmvc\5.3.22\spring-webmvc-5.3.22.jar;E:\MyProjact\.m2\repository\org\springframework\spring-aop\5.3.22\spring-aop-5.3.22.jar;E:\MyProjact\.m2\repository\org\springframework\spring-expression\5.3.22\spring-expression-5.3.22.jar;E:\MyProjact\.m2\repository\org\springframework\boot\spring-boot-starter-test\3.0.4\spring-boot-starter-test-3.0.4.jar;E:\MyProjact\.m2\repository\org\springframework\boot\spring-boot-test\2.7.3\spring-boot-test-2.7.3.jar;E:\MyProjact\.m2\repository\org\springframework\boot\spring-boot-test-autoconfigure\2.7.3\spring-boot-test-autoconfigure-2.7.3.jar;E:\MyProjact\.m2\repository\com\jayway\jsonpath\json-path\2.7.0\json-path-2.7.0.jar;E:\MyProjact\.m2\repository\net\minidev\json-smart\2.4.8\json-smart-2.4.8.jar;E:\MyProjact\.m2\repository\net\minidev\accessors-smart\2.4.8\accessors-smart-2.4.8.jar;E:\MyProjact\.m2\repository\org\ow2\asm\asm\9.1\asm-9.1.jar;E:\MyProjact\.m2\repository\jakarta\xml\bind\jakarta.xml.bind-api\2.3.3\jakarta.xml.bind-api-2.3.3.jar;E:\MyProjact\.m2\repository\jakarta\activation\jakarta.activation-api\1.2.2\jakarta.activation-api-1.2.2.jar;E:\MyProjact\.m2\repository\org\assertj\assertj-core\3.22.0\assertj-core-3.22.0.jar;E:\MyProjact\.m2\repository\org\hamcrest\hamcrest\2.2\hamcrest-2.2.jar;E:\MyProjact\.m2\repository\org\junit\jupiter\junit-jupiter\5.8.2\junit-jupiter-5.8.2.jar;E:\MyProjact\.m2\repository\org\mockito\mockito-core\4.5.1\mockito-core-4.5.1.jar;E:\MyProjact\.m2\repository\net\bytebuddy\byte-buddy-agent\1.12.13\byte-buddy-agent-1.12.13.jar;E:\MyProjact\.m2\repository\org\objenesis\objenesis\3.2\objenesis-3.2.jar;E:\MyProjact\.m2\repository\org\mockito\mockito-junit-jupiter\4.5.1\mockito-junit-jupiter-4.5.1.jar;E:\MyProjact\.m2\repository\org\skyscreamer\jsonassert\1.5.1\jsonassert-1.5.1.jar;E:\MyProjact\.m2\repository\com\vaadin\external\google\android-json\0.0.20131108.vaadin1\android-json-0.0.20131108.vaadin1.jar;E:\MyProjact\.m2\repository\org\springframework\spring-test\5.3.22\spring-test-5.3.22.jar;E:\MyProjact\.m2\repository\org\xmlunit\xmlunit-core\2.9.0\xmlunit-core-2.9.0.jar;E:\MyProjact\.m2\repository\org\projectlombok\lombok\1.18.26\lombok-1.18.26.jar;E:\MyProjact\.m2\repository\org\springframework\boot\spring-boot-starter-validation\3.0.4\spring-boot-starter-validation-3.0.4.jar;E:\MyProjact\.m2\repository\org\apache\tomcat\embed\tomcat-embed-el\9.0.65\tomcat-embed-el-9.0.65.jar;E:\MyProjact\.m2\repository\org\hibernate\validator\hibernate-validator\6.2.4.Final\hibernate-validator-6.2.4.Final.jar;E:\MyProjact\.m2\repository\com\h2database\h2\2.1.214\h2-2.1.214.jar;E:\MyProjact\.m2\repository\jakarta\persistence\jakarta.persistence-api\2.2.3\jakarta.persistence-api-2.2.3.jar;E:\MyProjact\.m2\repository\jakarta\transaction\jakarta.transaction-api\1.3.3\jakarta.transaction-api-1.3.3.jar;E:\MyProjact\.m2\repository\org\jboss\logging\jboss-logging\3.4.3.Final\jboss-logging-3.4.3.Final.jar;E:\MyProjact\.m2\repository\org\hibernate\common\hibernate-commons-annotations\6.0.6.Final\hibernate-commons-annotations-6.0.6.Final.jar;E:\MyProjact\.m2\repository\io\smallrye\jandex\3.0.5\jandex-3.0.5.jar;E:\MyProjact\.m2\repository\com\fasterxml\classmate\1.5.1\classmate-1.5.1.jar;E:\MyProjact\.m2\repository\net\bytebuddy\byte-buddy\1.12.13\byte-buddy-1.12.13.jar;E:\MyProjact\.m2\repository\org\glassfish\jaxb\jaxb-runtime\2.3.6\jaxb-runtime-2.3.6.jar;E:\MyProjact\.m2\repository\org\glassfish\jaxb\txw2\2.3.6\txw2-2.3.6.jar;E:\MyProjact\.m2\repository\com\sun\istack\istack-commons-runtime\3.0.12\istack-commons-runtime-3.0.12.jar;E:\MyProjact\.m2\repository\com\sun\activation\jakarta.activation\1.2.2\jakarta.activation-1.2.2.jar;E:\MyProjact\.m2\repository\jakarta\inject\jakarta.inject-api\2.0.1\jakarta.inject-api-2.0.1.jar;E:\MyProjact\.m2\repository\org\antlr\antlr4-runtime\4.10.1\antlr4-runtime-4.10.1.jar;E:\MyProjact\.m2\repository\jakarta\validation\jakarta.validation-api\3.0.2\jakarta.validation-api-3.0.2.jar;E:\MyProjact\.m2\repository\org\junit\jupiter\junit-jupiter-engine\5.8.1\junit-jupiter-engine-5.8.1.jar;E:\MyProjact\.m2\repository\org\junit\platform\junit-platform-engine\1.8.2\junit-platform-engine-1.8.2.jar;E:\MyProjact\.m2\repository\org\apiguardian\apiguardian-api\1.1.2\apiguardian-api-1.1.2.jar;E:\MyProjact\.m2\repository\org\junit\jupiter\junit-jupiter-api\5.8.1\junit-jupiter-api-5.8.1.jar;E:\MyProjact\.m2\repository\org\opentest4j\opentest4j\1.2.0\opentest4j-1.2.0.jar;E:\MyProjact\.m2\repository\org\junit\platform\junit-platform-commons\1.8.2\junit-platform-commons-1.8.2.jar;E:\MyProjact\.m2\repository\org\junit\jupiter\junit-jupiter-params\5.8.1\junit-jupiter-params-5.8.1.jar;E:\MyProjact\.m2\repository\org\junit\platform\junit-platform-suite\1.8.1\junit-platform-suite-1.8.1.jar;E:\MyProjact\.m2\repository\org\junit\platform\junit-platform-suite-api\1.8.2\junit-platform-suite-api-1.8.2.jar;E:\MyProjact\.m2\repository\org\junit\platform\junit-platform-suite-engine\1.8.2\junit-platform-suite-engine-1.8.2.jar;E:\MyProjact\.m2\repository\org\junit\platform\junit-platform-suite-commons\1.8.2\junit-platform-suite-commons-1.8.2.jar;E:\MyProjact\.m2\repository\org\junit\platform\junit-platform-launcher\1.8.2\junit-platform-launcher-1.8.2.jar;"/>
    <property name="sun.cpu.endian" value="little"/>
    <property name="user.home" value="C:\Users\PAWEL"/>
    <property name="user.language" value="ru"/>
    <property name="java.specification.vendor" value="Oracle Corporation"/>
    <property name="java.version.date" value="2023-01-17"/>
    <property name="java.home" value="E:\MyProjact\.jdks\openjdk-19.0.2"/>
    <property name="file.separator" value="\"/>
    <property name="basedir" value="E:\MyProjact\java-filmorate-11"/>
    <property name="java.vm.compressedOopsMode" value="Zero based"/>
    <property name="line.separator" value="&#10;"/>
    <property name="java.vm.specification.vendor" value="Oracle Corporation"/>
    <property name="java.specification.name" value="Java Platform API Specification"/>
    <property name="surefire.real.class.path" value="C:\Users\PAWEL\AppData\Local\Temp\surefire1163268498243930366\surefirebooter18300002127380111327.jar"/>
    <property name="user.script" value=""/>
    <property name="sun.management.compiler" value="HotSpot 64-Bit Tiered Compilers"/>
    <property name="java.runtime.version" value="19.0.2+7-44"/>
    <property name="user.name" value="PAWEL"/>
    <property name="stdout.encoding" value="Cp1251"/>
    <property name="path.separator" value=";"/>
    <property name="os.version" value="10.0"/>
    <property name="java.runtime.name" value="OpenJDK Runtime Environment"/>
    <property name="file.encoding" value="UTF-8"/>
    <property name="java.vm.name" value="OpenJDK 64-Bit Server VM"/>
    <property name="localRepository" value="E:\MyProjact\.m2\repository"/>
    <property name="java.vendor.url.bug" value="https://bugreport.java.com/bugreport/"/>
    <property name="java.io.tmpdir" value="C:\Users\PAWEL\AppData\Local\Temp\"/>
    <property name="idea.version" value="2023.1.2"/>
    <property name="java.version" value="19.0.2"/>
    <property name="user.dir" value="E:\MyProjact\java-filmorate-11"/>
    <property name="os.arch" value="amd64"/>
    <property name="java.vm.specification.name" value="Java Virtual Machine Specification"/>
    <property name="sun.os.patch.level" value=""/>
    <property name="native.encoding" value="Cp1251"/>
    <property name="java.library.path" value="E:\MyProjact\.jdks\openjdk-19.0.2\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\Python311\Scripts\;C:\Python311\;C:\WINDOWS\system32\WBEM;C:\Program Files\Amazon Corretto\jdk11.0.17_8\bin;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;C:\Program Files\NVIDIA Corporation\NVIDIA NvDLISR;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;C:\Users\PAWEL\AppData\Local\Microsoft\WindowsApps;C:\Users\PAWEL\AppData\Local\Programs\Microsoft VS Code\bin;# C:\Program Files\JetBrains\IntelliJ IDEA Community Edition 2022.2.3\bin;C:\Program Files\dotnet\;&quot;c:\program files\apache-maven-3.8.7\bin;%PATH%&quot;;C:\Program Files\nodejs\;C:\ProgramData\chocolatey\bin;c:\Program Files\JetBrains\ideaIU-2022.3.3.win\bin\;C:\Program Files\Graphviz\bin;C:\Program Files\Git\cmd;C:\Users\PAWEL\AppData\Local\Microsoft\WindowsApps;C:\Users\PAWEL\AppData\Local\Programs\Microsoft VS Code\bin;c:\Program Files\JetBrains\ideaIU-2022.3.3.win\bin\;e:\MyProjact\.m2\wrapper\dists\apache-maven-3.8.7-bin\;C:\Users\PAWEL\AppData\Roaming\npm;c:\Program Files\JetBrains\ideaIU-2022.3.3.win\bin\;C:\Users\PAWEL\AppData\Local\GitHubDesktop\bin;."/>
    <property name="java.vm.info" value="mixed mode, sharing"/>
    <property name="stderr.encoding" value="Cp1251"/>
    <property name="java.vendor" value="Oracle Corporation"/>
    <property name="java.vm.version" value="19.0.2+7-44"/>
    <property name="sun.io.unicode.encoding" value="UnicodeLittle"/>
    <property name="java.class.version" value="63.0"/>
  </properties>
  <testcase name="findMostPopularsByGenreAndYearTest" classname="ru.yandex.practicum.filmorate.MostPopularIntegrationTest" time="0.139">
    <failure message="expected: &lt;[Film(id=2, name=Фильм2, description=Описание2, releaseDate=2000-12-28, duration=100, likes=[1], genres=[Genre(id=1, name=Комедия)], directors=[], mpa=Rating(id=1, name=), idD=0)]&gt; but was: &lt;[Film(id=2, name=Фильм2, description=Описание2, releaseDate=2000-12-28, duration=100, likes=[], genres=[Genre(id=1, name=Комедия)], directors=null, mpa=Rating(id=1, name=), idD=0), Film(id=1, name=Фильм1, description=Описание1, releaseDate=1995-12-28, duration=50, likes=[], genres=[Genre(id=1, name=Комедия)], directors=null, mpa=Rating(id=1, name=), idD=0)]&gt;" type="org.opentest4j.AssertionFailedError"><![CDATA[org.opentest4j.AssertionFailedError: expected: <[Film(id=2, name=Фильм2, description=Описание2, releaseDate=2000-12-28, duration=100, likes=[1], genres=[Genre(id=1, name=Комедия)], directors=[], mpa=Rating(id=1, name=), idD=0)]> but was: <[Film(id=2, name=Фильм2, description=Описание2, releaseDate=2000-12-28, duration=100, likes=[], genres=[Genre(id=1, name=Комедия)], directors=null, mpa=Rating(id=1, name=), idD=0), Film(id=1, name=Фильм1, description=Описание1, releaseDate=1995-12-28, duration=50, likes=[], genres=[Genre(id=1, name=Комедия)], directors=null, mpa=Rating(id=1, name=), idD=0)]>
	at ru.yandex.practicum.filmorate.MostPopularIntegrationTest.findMostPopularsByGenreAndYearTest(MostPopularIntegrationTest.java:130)
]]></failure>
    <system-out><![CDATA[&amp#27;[2m2023-06-02 05:41:35.573&amp#27;[0;39m &amp#27;[32m INFO&amp#27;[0;39m &amp#27;[35m3908&amp#27;[0;39m &amp#27;[2m---&amp#27;[0;39m &amp#27;[2m[           main]&amp#27;[0;39m &amp#27;[36m.b.t.c.SpringBootTestContextBootstrapper&amp#27;[0;39m &amp#27;[2m:&amp#27;[0;39m Neither @ContextConfiguration nor @ContextHierarchy found for test class [ru.yandex.practicum.filmorate.MostPopularIntegrationTest], using SpringBootContextLoader
&amp#27;[2m2023-06-02 05:41:35.574&amp#27;[0;39m &amp#27;[32m INFO&amp#27;[0;39m &amp#27;[35m3908&amp#27;[0;39m &amp#27;[2m---&amp#27;[0;39m &amp#27;[2m[           main]&amp#27;[0;39m &amp#27;[36mo.s.t.c.support.AbstractContextLoader   &amp#27;[0;39m &amp#27;[2m:&amp#27;[0;39m Could not detect default resource locations for test class [ru.yandex.practicum.filmorate.MostPopularIntegrationTest]: no resource found for suffixes {-context.xml, Context.groovy}.
&amp#27;[2m2023-06-02 05:41:35.574&amp#27;[0;39m &amp#27;[32m INFO&amp#27;[0;39m &amp#27;[35m3908&amp#27;[0;39m &amp#27;[2m---&amp#27;[0;39m &amp#27;[2m[           main]&amp#27;[0;39m &amp#27;[36mt.c.s.AnnotationConfigContextLoaderUtils&amp#27;[0;39m &amp#27;[2m:&amp#27;[0;39m Could not detect default configuration classes for test class [ru.yandex.practicum.filmorate.MostPopularIntegrationTest]: MostPopularIntegrationTest does not declare any static, non-private, non-final, nested classes annotated with @Configuration.
&amp#27;[2m2023-06-02 05:41:35.579&amp#27;[0;39m &amp#27;[32m INFO&amp#27;[0;39m &amp#27;[35m3908&amp#27;[0;39m &amp#27;[2m---&amp#27;[0;39m &amp#27;[2m[           main]&amp#27;[0;39m &amp#27;[36m.b.t.c.SpringBootTestContextBootstrapper&amp#27;[0;39m &amp#27;[2m:&amp#27;[0;39m Found @SpringBootConfiguration ru.yandex.practicum.filmorate.FilmorateApplication for test class ru.yandex.practicum.filmorate.MostPopularIntegrationTest
&amp#27;[2m2023-06-02 05:41:35.580&amp#27;[0;39m &amp#27;[32m INFO&amp#27;[0;39m &amp#27;[35m3908&amp#27;[0;39m &amp#27;[2m---&amp#27;[0;39m &amp#27;[2m[           main]&amp#27;[0;39m &amp#27;[36m.b.t.c.SpringBootTestContextBootstrapper&amp#27;[0;39m &amp#27;[2m:&amp#27;[0;39m Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.boot.test.autoconfigure.webservices.client.MockWebServiceServerTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.event.ApplicationEventsTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener, org.springframework.test.context.event.EventPublishingTestExecutionListener]
&amp#27;[2m2023-06-02 05:41:35.580&amp#27;[0;39m &amp#27;[32m INFO&amp#27;[0;39m &amp#27;[35m3908&amp#27;[0;39m &amp#27;[2m---&amp#27;[0;39m &amp#27;[2m[           main]&amp#27;[0;39m &amp#27;[36m.b.t.c.SpringBootTestContextBootstrapper&amp#27;[0;39m &amp#27;[2m:&amp#27;[0;39m Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@60ae7cf2, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@225e09f0, org.springframework.test.context.event.ApplicationEventsTestExecutionListener@bc8d68b, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@2fa212df, org.springframework.boot.test.autoconfigure.SpringBootDependencyInjectionTestExecutionListener@3cf8a235, org.springframework.test.context.support.DirtiesContextTestExecutionListener@6e3b2dd3, org.springframework.test.context.transaction.TransactionalTestExecutionListener@238ad211, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@1c011855, org.springframework.test.context.event.EventPublishingTestExecutionListener@6591f8ea, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@5273143e, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@279c4e3b, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@334b392d, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@59f7c106, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@136fece2, org.springframework.boot.test.autoconfigure.webservices.client.MockWebServiceServerTestExecutionListener@56478522]
&amp#27;[2m2023-06-02 05:41:35.666&amp#27;[0;39m &amp#27;[32m INFO&amp#27;[0;39m &amp#27;[35m3908&amp#27;[0;39m &amp#27;[2m---&amp#27;[0;39m &amp#27;[2m[           main]&amp#27;[0;39m &amp#27;[36mr.y.p.f.storage.film.FilmDbStorage      &amp#27;[0;39m &amp#27;[2m:&amp#27;[0;39m Запрос create > Film(id=1, name=Фильм1, description=Описание1, releaseDate=1995-12-28, duration=50, likes=[], genres=[Genre(id=1, name=null)], directors=null, mpa=Rating(id=1, name=), idD=0) --> INSERT INTO FILMORATE_SHEMA.FILMS (ID_RATE, DURATION, RELEASE_DATE, DESCRIPTION, NAME_FILMS) VALUES (?,?,CAST (? AS DATE),?,?)
&amp#27;[2m2023-06-02 05:41:35.742&amp#27;[0;39m &amp#27;[32m INFO&amp#27;[0;39m &amp#27;[35m3908&amp#27;[0;39m &amp#27;[2m---&amp#27;[0;39m &amp#27;[2m[           main]&amp#27;[0;39m &amp#27;[36mr.y.p.f.storage.film.FilmDbStorage      &amp#27;[0;39m &amp#27;[2m:&amp#27;[0;39m Результат create film > Film(id=1, name=Фильм1, description=Описание1, releaseDate=1995-12-28, duration=50, likes=[], genres=[Genre(id=1, name=Комедия)], directors=null, mpa=Rating(id=1, name=), idD=0) 
&amp#27;[2m2023-06-02 05:41:35.743&amp#27;[0;39m &amp#27;[32m INFO&amp#27;[0;39m &amp#27;[35m3908&amp#27;[0;39m &amp#27;[2m---&amp#27;[0;39m &amp#27;[2m[           main]&amp#27;[0;39m &amp#27;[36mr.y.p.f.storage.film.FilmDbStorage      &amp#27;[0;39m &amp#27;[2m:&amp#27;[0;39m Запрос create > Film(id=2, name=Фильм2, description=Описание2, releaseDate=2000-12-28, duration=100, likes=[], genres=[Genre(id=1, name=null)], directors=null, mpa=Rating(id=1, name=), idD=0) --> INSERT INTO FILMORATE_SHEMA.FILMS (ID_RATE, DURATION, RELEASE_DATE, DESCRIPTION, NAME_FILMS) VALUES (?,?,CAST (? AS DATE),?,?)
&amp#27;[2m2023-06-02 05:41:35.749&amp#27;[0;39m &amp#27;[32m INFO&amp#27;[0;39m &amp#27;[35m3908&amp#27;[0;39m &amp#27;[2m---&amp#27;[0;39m &amp#27;[2m[           main]&amp#27;[0;39m &amp#27;[36mr.y.p.f.storage.film.FilmDbStorage      &amp#27;[0;39m &amp#27;[2m:&amp#27;[0;39m Результат create film > Film(id=2, name=Фильм2, description=Описание2, releaseDate=2000-12-28, duration=100, likes=[], genres=[Genre(id=1, name=Комедия)], directors=null, mpa=Rating(id=1, name=), idD=0) 
&amp#27;[2m2023-06-02 05:41:35.750&amp#27;[0;39m &amp#27;[32m INFO&amp#27;[0;39m &amp#27;[35m3908&amp#27;[0;39m &amp#27;[2m---&amp#27;[0;39m &amp#27;[2m[           main]&amp#27;[0;39m &amp#27;[36mr.y.p.f.storage.user.UserDbStorage      &amp#27;[0;39m &amp#27;[2m:&amp#27;[0;39m Запрос create > User(id=1, login=Логин1, email=test@qq1.ru, birthday=1995-12-28, name=Имя1) --> INSERT INTO FILMORATE_SHEMA.USERS (NAME_USER, BIRTHDAY, EMAIL, LOGIN) VALUES (?,CAST (? AS DATE),?,?)
&amp#27;[2m2023-06-02 05:41:35.755&amp#27;[0;39m &amp#27;[32m INFO&amp#27;[0;39m &amp#27;[35m3908&amp#27;[0;39m &amp#27;[2m---&amp#27;[0;39m &amp#27;[2m[           main]&amp#27;[0;39m &amp#27;[36mr.y.p.f.storage.user.UserDbStorage      &amp#27;[0;39m &amp#27;[2m:&amp#27;[0;39m Запрос create > User(id=2, login=Логин2, email=test@qq2.ru, birthday=2000-12-28, name=Имя2) --> INSERT INTO FILMORATE_SHEMA.USERS (NAME_USER, BIRTHDAY, EMAIL, LOGIN) VALUES (?,CAST (? AS DATE),?,?)
&amp#27;[2m2023-06-02 05:41:35.760&amp#27;[0;39m &amp#27;[32m INFO&amp#27;[0;39m &amp#27;[35m3908&amp#27;[0;39m &amp#27;[2m---&amp#27;[0;39m &amp#27;[2m[           main]&amp#27;[0;39m &amp#27;[36mr.y.p.f.storage.film.FilmDbStorage      &amp#27;[0;39m &amp#27;[2m:&amp#27;[0;39m Запрос addLike > INSERT INTO FILMORATE_SHEMA.LIKES_SET (ID_FILM, ID_USER) VALUES (?, ?)
&amp#27;[2m2023-06-02 05:41:35.762&amp#27;[0;39m &amp#27;[32m INFO&amp#27;[0;39m &amp#27;[35m3908&amp#27;[0;39m &amp#27;[2m---&amp#27;[0;39m &amp#27;[2m[           main]&amp#27;[0;39m &amp#27;[36mr.y.p.f.storage.film.FilmDbStorage      &amp#27;[0;39m &amp#27;[2m:&amp#27;[0;39m Запрос getMaxPopularByGenreAndYear > SELECT * FROM FILMORATE_SHEMA.FILMS AS f JOIN FILMORATE_SHEMA.LIKES_SET AS ls ON f.ID_FILM = ls.ID_FILM WHERE f.ID_FILM IN ( SELECT ID_FILM FROM FILMORATE_SHEMA.GENRE_SET WHERE ID = ?) AND YEAR(f.RELEASE_DATE) LIKE ? GROUP BY f.ID_FILM ORDER BY COUNT(ls.ID_USER) desc LIMIT ?
&amp#27;[2m2023-06-02 05:41:35.776&amp#27;[0;39m &amp#27;[32m INFO&amp#27;[0;39m &amp#27;[35m3908&amp#27;[0;39m &amp#27;[2m---&amp#27;[0;39m &amp#27;[2m[           main]&amp#27;[0;39m &amp#27;[36mr.y.p.f.storage.film.FilmDbStorage      &amp#27;[0;39m &amp#27;[2m:&amp#27;[0;39m Запрос mapToFilm ResultSet > rs62: org.h2.result.LocalResult@3a54638b columns: 9 rows: 1 pos: 0
&amp#27;[2m2023-06-02 05:41:35.780&amp#27;[0;39m &amp#27;[32m INFO&amp#27;[0;39m &amp#27;[35m3908&amp#27;[0;39m &amp#27;[2m---&amp#27;[0;39m &amp#27;[2m[           main]&amp#27;[0;39m &amp#27;[36mr.y.p.f.storage.film.GenreDbStorage     &amp#27;[0;39m &amp#27;[2m:&amp#27;[0;39m Запрос mapToGenre ResultSet > rs63: org.h2.result.LocalResult@1d585fb columns: 4 rows: 1 pos: 0
&amp#27;[2m2023-06-02 05:41:35.781&amp#27;[0;39m &amp#27;[32m INFO&amp#27;[0;39m &amp#27;[35m3908&amp#27;[0;39m &amp#27;[2m---&amp#27;[0;39m &amp#27;[2m[           main]&amp#27;[0;39m &amp#27;[36mr.y.p.f.storage.film.GenreDbStorage     &amp#27;[0;39m &amp#27;[2m:&amp#27;[0;39m Запрос findGenreByIdFilm > SELECT * FROM FILMORATE_SHEMA.GENRE AS G JOIN FILMORATE_SHEMA.GENRE_SET AS GS ON G.ID=GS.ID WHERE GS.ID_FILM = ? -- [Genre(id=1, name=Комедия)] 
&amp#27;[2m2023-06-02 05:41:35.785&amp#27;[0;39m &amp#27;[32m INFO&amp#27;[0;39m &amp#27;[35m3908&amp#27;[0;39m &amp#27;[2m---&amp#27;[0;39m &amp#27;[2m[           main]&amp#27;[0;39m &amp#27;[36mr.y.p.f.storage.film.DirectorDBStorage  &amp#27;[0;39m &amp#27;[2m:&amp#27;[0;39m Запрос findGenreByIdFilm > SELECT * FROM FILMORATE_SHEMA.DIRECTOR_LIST AS DL JOIN FILMORATE_SHEMA.DIRECTOR AS D ON DL.ID_DIRECTOR = D.ID_DIRECTOR WHERE D.ID_FILM = ? -- [] 
&amp#27;[2m2023-06-02 05:41:35.785&amp#27;[0;39m &amp#27;[32m INFO&amp#27;[0;39m &amp#27;[35m3908&amp#27;[0;39m &amp#27;[2m---&amp#27;[0;39m &amp#27;[2m[           main]&amp#27;[0;39m &amp#27;[36mr.y.p.f.storage.film.FilmDbStorage      &amp#27;[0;39m &amp#27;[2m:&amp#27;[0;39m Запрос getLikes > SELECT ID_USER FROM FILMORATE_SHEMA.LIKES_SET WHERE ID_FILM = ?
&amp#27;[2m2023-06-02 05:41:35.822&amp#27;[0;39m &amp#27;[32m INFO&amp#27;[0;39m &amp#27;[35m3908&amp#27;[0;39m &amp#27;[2m---&amp#27;[0;39m &amp#27;[2m[           main]&amp#27;[0;39m &amp#27;[36mr.y.p.f.storage.film.FilmDbStorage      &amp#27;[0;39m &amp#27;[2m:&amp#27;[0;39m Collection > [Film(id=2, name=Фильм2, description=Описание2, releaseDate=2000-12-28, duration=100, likes=[1], genres=[Genre(id=1, name=Комедия)], directors=[], mpa=Rating(id=1, name=), idD=0)]
]]></system-out>
  </testcase>
  <testcase name="findMostPopularsByGenreTest" classname="ru.yandex.practicum.filmorate.MostPopularIntegrationTest" time="0.033">
    <failure message="expected: &lt;[Film(id=2, name=Фильм2, description=Описание2, releaseDate=2000-12-28, duration=100, likes=[1], genres=[Genre(id=1, name=Комедия)], directors=[], mpa=Rating(id=1, name=), idD=0)]&gt; but was: &lt;[Film(id=2, name=Фильм2, description=Описание2, releaseDate=2000-12-28, duration=100, likes=[], genres=[Genre(id=1, name=Комедия)], directors=null, mpa=Rating(id=1, name=), idD=0), Film(id=1, name=Фильм1, description=Описание1, releaseDate=1995-12-28, duration=50, likes=[], genres=[Genre(id=1, name=Комедия)], directors=null, mpa=Rating(id=1, name=), idD=0)]&gt;" type="org.opentest4j.AssertionFailedError"><![CDATA[org.opentest4j.AssertionFailedError: expected: <[Film(id=2, name=Фильм2, description=Описание2, releaseDate=2000-12-28, duration=100, likes=[1], genres=[Genre(id=1, name=Комедия)], directors=[], mpa=Rating(id=1, name=), idD=0)]> but was: <[Film(id=2, name=Фильм2, description=Описание2, releaseDate=2000-12-28, duration=100, likes=[], genres=[Genre(id=1, name=Комедия)], directors=null, mpa=Rating(id=1, name=), idD=0), Film(id=1, name=Фильм1, description=Описание1, releaseDate=1995-12-28, duration=50, likes=[], genres=[Genre(id=1, name=Комедия)], directors=null, mpa=Rating(id=1, name=), idD=0)]>
	at ru.yandex.practicum.filmorate.MostPopularIntegrationTest.findMostPopularsByGenreTest(MostPopularIntegrationTest.java:112)
]]></failure>
    <system-out><![CDATA[&amp#27;[2m2023-06-02 05:41:35.851&amp#27;[0;39m &amp#27;[32m INFO&amp#27;[0;39m &amp#27;[35m3908&amp#27;[0;39m &amp#27;[2m---&amp#27;[0;39m &amp#27;[2m[           main]&amp#27;[0;39m &amp#27;[36mr.y.p.f.storage.film.FilmDbStorage      &amp#27;[0;39m &amp#27;[2m:&amp#27;[0;39m Запрос create > Film(id=1, name=Фильм1, description=Описание1, releaseDate=1995-12-28, duration=50, likes=[], genres=[Genre(id=1, name=null)], directors=null, mpa=Rating(id=1, name=), idD=0) --> INSERT INTO FILMORATE_SHEMA.FILMS (ID_RATE, DURATION, RELEASE_DATE, DESCRIPTION, NAME_FILMS) VALUES (?,?,CAST (? AS DATE),?,?)
&amp#27;[2m2023-06-02 05:41:35.855&amp#27;[0;39m &amp#27;[32m INFO&amp#27;[0;39m &amp#27;[35m3908&amp#27;[0;39m &amp#27;[2m---&amp#27;[0;39m &amp#27;[2m[           main]&amp#27;[0;39m &amp#27;[36mr.y.p.f.storage.film.FilmDbStorage      &amp#27;[0;39m &amp#27;[2m:&amp#27;[0;39m Результат create film > Film(id=1, name=Фильм1, description=Описание1, releaseDate=1995-12-28, duration=50, likes=[], genres=[Genre(id=1, name=Комедия)], directors=null, mpa=Rating(id=1, name=), idD=0) 
&amp#27;[2m2023-06-02 05:41:35.855&amp#27;[0;39m &amp#27;[32m INFO&amp#27;[0;39m &amp#27;[35m3908&amp#27;[0;39m &amp#27;[2m---&amp#27;[0;39m &amp#27;[2m[           main]&amp#27;[0;39m &amp#27;[36mr.y.p.f.storage.film.FilmDbStorage      &amp#27;[0;39m &amp#27;[2m:&amp#27;[0;39m Запрос create > Film(id=2, name=Фильм2, description=Описание2, releaseDate=2000-12-28, duration=100, likes=[], genres=[Genre(id=1, name=null)], directors=null, mpa=Rating(id=1, name=), idD=0) --> INSERT INTO FILMORATE_SHEMA.FILMS (ID_RATE, DURATION, RELEASE_DATE, DESCRIPTION, NAME_FILMS) VALUES (?,?,CAST (? AS DATE),?,?)
&amp#27;[2m2023-06-02 05:41:35.858&amp#27;[0;39m &amp#27;[32m INFO&amp#27;[0;39m &amp#27;[35m3908&amp#27;[0;39m &amp#27;[2m---&amp#27;[0;39m &amp#27;[2m[           main]&amp#27;[0;39m &amp#27;[36mr.y.p.f.storage.film.FilmDbStorage      &amp#27;[0;39m &amp#27;[2m:&amp#27;[0;39m Результат create film > Film(id=2, name=Фильм2, description=Описание2, releaseDate=2000-12-28, duration=100, likes=[], genres=[Genre(id=1, name=Комедия)], directors=null, mpa=Rating(id=1, name=), idD=0) 
&amp#27;[2m2023-06-02 05:41:35.859&amp#27;[0;39m &amp#27;[32m INFO&amp#27;[0;39m &amp#27;[35m3908&amp#27;[0;39m &amp#27;[2m---&amp#27;[0;39m &amp#27;[2m[           main]&amp#27;[0;39m &amp#27;[36mr.y.p.f.storage.user.UserDbStorage      &amp#27;[0;39m &amp#27;[2m:&amp#27;[0;39m Запрос create > User(id=1, login=Логин1, email=test@qq1.ru, birthday=1995-12-28, name=Имя1) --> INSERT INTO FILMORATE_SHEMA.USERS (NAME_USER, BIRTHDAY, EMAIL, LOGIN) VALUES (?,CAST (? AS DATE),?,?)
&amp#27;[2m2023-06-02 05:41:35.862&amp#27;[0;39m &amp#27;[32m INFO&amp#27;[0;39m &amp#27;[35m3908&amp#27;[0;39m &amp#27;[2m---&amp#27;[0;39m &amp#27;[2m[           main]&amp#27;[0;39m &amp#27;[36mr.y.p.f.storage.user.UserDbStorage      &amp#27;[0;39m &amp#27;[2m:&amp#27;[0;39m Запрос create > User(id=2, login=Логин2, email=test@qq2.ru, birthday=2000-12-28, name=Имя2) --> INSERT INTO FILMORATE_SHEMA.USERS (NAME_USER, BIRTHDAY, EMAIL, LOGIN) VALUES (?,CAST (? AS DATE),?,?)
&amp#27;[2m2023-06-02 05:41:35.863&amp#27;[0;39m &amp#27;[32m INFO&amp#27;[0;39m &amp#27;[35m3908&amp#27;[0;39m &amp#27;[2m---&amp#27;[0;39m &amp#27;[2m[           main]&amp#27;[0;39m &amp#27;[36mr.y.p.f.storage.film.FilmDbStorage      &amp#27;[0;39m &amp#27;[2m:&amp#27;[0;39m Запрос addLike > INSERT INTO FILMORATE_SHEMA.LIKES_SET (ID_FILM, ID_USER) VALUES (?, ?)
&amp#27;[2m2023-06-02 05:41:35.864&amp#27;[0;39m &amp#27;[32m INFO&amp#27;[0;39m &amp#27;[35m3908&amp#27;[0;39m &amp#27;[2m---&amp#27;[0;39m &amp#27;[2m[           main]&amp#27;[0;39m &amp#27;[36mr.y.p.f.storage.film.FilmDbStorage      &amp#27;[0;39m &amp#27;[2m:&amp#27;[0;39m Запрос getMaxPopularByGenre > SELECT * FROM FILMORATE_SHEMA.FILMS AS f JOIN FILMORATE_SHEMA.LIKES_SET AS ls ON f.ID_FILM = ls.ID_FILM WHERE f.ID_FILM IN (SELECT ID_FILM FROM FILMORATE_SHEMA.GENRE_SET WHERE ID = ?) GROUP BY f.ID_FILM ORDER BY COUNT(ls.ID_USER) desc LIMIT ?
&amp#27;[2m2023-06-02 05:41:35.866&amp#27;[0;39m &amp#27;[32m INFO&amp#27;[0;39m &amp#27;[35m3908&amp#27;[0;39m &amp#27;[2m---&amp#27;[0;39m &amp#27;[2m[           main]&amp#27;[0;39m &amp#27;[36mr.y.p.f.storage.film.FilmDbStorage      &amp#27;[0;39m &amp#27;[2m:&amp#27;[0;39m Запрос mapToFilm ResultSet > rs74: org.h2.result.LocalResult@5f3f57ff columns: 9 rows: 1 pos: 0
&amp#27;[2m2023-06-02 05:41:35.868&amp#27;[0;39m &amp#27;[32m INFO&amp#27;[0;39m &amp#27;[35m3908&amp#27;[0;39m &amp#27;[2m---&amp#27;[0;39m &amp#27;[2m[           main]&amp#27;[0;39m &amp#27;[36mr.y.p.f.storage.film.GenreDbStorage     &amp#27;[0;39m &amp#27;[2m:&amp#27;[0;39m Запрос mapToGenre ResultSet > rs75: org.h2.result.LocalResult@d4ecdb0 columns: 4 rows: 1 pos: 0
&amp#27;[2m2023-06-02 05:41:35.868&amp#27;[0;39m &amp#27;[32m INFO&amp#27;[0;39m &amp#27;[35m3908&amp#27;[0;39m &amp#27;[2m---&amp#27;[0;39m &amp#27;[2m[           main]&amp#27;[0;39m &amp#27;[36mr.y.p.f.storage.film.GenreDbStorage     &amp#27;[0;39m &amp#27;[2m:&amp#27;[0;39m Запрос findGenreByIdFilm > SELECT * FROM FILMORATE_SHEMA.GENRE AS G JOIN FILMORATE_SHEMA.GENRE_SET AS GS ON G.ID=GS.ID WHERE GS.ID_FILM = ? -- [Genre(id=1, name=Комедия)] 
&amp#27;[2m2023-06-02 05:41:35.869&amp#27;[0;39m &amp#27;[32m INFO&amp#27;[0;39m &amp#27;[35m3908&amp#27;[0;39m &amp#27;[2m---&amp#27;[0;39m &amp#27;[2m[           main]&amp#27;[0;39m &amp#27;[36mr.y.p.f.storage.film.DirectorDBStorage  &amp#27;[0;39m &amp#27;[2m:&amp#27;[0;39m Запрос findGenreByIdFilm > SELECT * FROM FILMORATE_SHEMA.DIRECTOR_LIST AS DL JOIN FILMORATE_SHEMA.DIRECTOR AS D ON DL.ID_DIRECTOR = D.ID_DIRECTOR WHERE D.ID_FILM = ? -- [] 
&amp#27;[2m2023-06-02 05:41:35.870&amp#27;[0;39m &amp#27;[32m INFO&amp#27;[0;39m &amp#27;[35m3908&amp#27;[0;39m &amp#27;[2m---&amp#27;[0;39m &amp#27;[2m[           main]&amp#27;[0;39m &amp#27;[36mr.y.p.f.storage.film.FilmDbStorage      &amp#27;[0;39m &amp#27;[2m:&amp#27;[0;39m Запрос getLikes > SELECT ID_USER FROM FILMORATE_SHEMA.LIKES_SET WHERE ID_FILM = ?
&amp#27;[2m2023-06-02 05:41:35.872&amp#27;[0;39m &amp#27;[32m INFO&amp#27;[0;39m &amp#27;[35m3908&amp#27;[0;39m &amp#27;[2m---&amp#27;[0;39m &amp#27;[2m[           main]&amp#27;[0;39m &amp#27;[36mr.y.p.f.storage.film.FilmDbStorage      &amp#27;[0;39m &amp#27;[2m:&amp#27;[0;39m Collection > [Film(id=2, name=Фильм2, description=Описание2, releaseDate=2000-12-28, duration=100, likes=[1], genres=[Genre(id=1, name=Комедия)], directors=[], mpa=Rating(id=1, name=), idD=0)]
]]></system-out>
  </testcase>
  <testcase name="findMostPopularsByYearTest" classname="ru.yandex.practicum.filmorate.MostPopularIntegrationTest" time="0.096">
    <failure message="expected: &lt;[Film(id=2, name=Фильм2, description=Описание2, releaseDate=2000-12-28, duration=100, likes=[1], genres=[Genre(id=1, name=Комедия)], directors=[], mpa=Rating(id=1, name=), idD=0)]&gt; but was: &lt;[Film(id=2, name=Фильм2, description=Описание2, releaseDate=2000-12-28, duration=100, likes=[], genres=[Genre(id=1, name=Комедия)], directors=null, mpa=Rating(id=1, name=), idD=0)]&gt;" type="org.opentest4j.AssertionFailedError"><![CDATA[org.opentest4j.AssertionFailedError: expected: <[Film(id=2, name=Фильм2, description=Описание2, releaseDate=2000-12-28, duration=100, likes=[1], genres=[Genre(id=1, name=Комедия)], directors=[], mpa=Rating(id=1, name=), idD=0)]> but was: <[Film(id=2, name=Фильм2, description=Описание2, releaseDate=2000-12-28, duration=100, likes=[], genres=[Genre(id=1, name=Комедия)], directors=null, mpa=Rating(id=1, name=), idD=0)]>
	at ru.yandex.practicum.filmorate.MostPopularIntegrationTest.findMostPopularsByYearTest(MostPopularIntegrationTest.java:118)
]]></failure>
    <system-out><![CDATA[&amp#27;[2m2023-06-02 05:41:35.885&amp#27;[0;39m &amp#27;[32m INFO&amp#27;[0;39m &amp#27;[35m3908&amp#27;[0;39m &amp#27;[2m---&amp#27;[0;39m &amp#27;[2m[           main]&amp#27;[0;39m &amp#27;[36mr.y.p.f.storage.film.FilmDbStorage      &amp#27;[0;39m &amp#27;[2m:&amp#27;[0;39m Запрос create > Film(id=1, name=Фильм1, description=Описание1, releaseDate=1995-12-28, duration=50, likes=[], genres=[Genre(id=1, name=null)], directors=null, mpa=Rating(id=1, name=), idD=0) --> INSERT INTO FILMORATE_SHEMA.FILMS (ID_RATE, DURATION, RELEASE_DATE, DESCRIPTION, NAME_FILMS) VALUES (?,?,CAST (? AS DATE),?,?)
&amp#27;[2m2023-06-02 05:41:35.891&amp#27;[0;39m &amp#27;[32m INFO&amp#27;[0;39m &amp#27;[35m3908&amp#27;[0;39m &amp#27;[2m---&amp#27;[0;39m &amp#27;[2m[           main]&amp#27;[0;39m &amp#27;[36mr.y.p.f.storage.film.FilmDbStorage      &amp#27;[0;39m &amp#27;[2m:&amp#27;[0;39m Результат create film > Film(id=1, name=Фильм1, description=Описание1, releaseDate=1995-12-28, duration=50, likes=[], genres=[Genre(id=1, name=Комедия)], directors=null, mpa=Rating(id=1, name=), idD=0) 
&amp#27;[2m2023-06-02 05:41:35.893&amp#27;[0;39m &amp#27;[32m INFO&amp#27;[0;39m &amp#27;[35m3908&amp#27;[0;39m &amp#27;[2m---&amp#27;[0;39m &amp#27;[2m[           main]&amp#27;[0;39m &amp#27;[36mr.y.p.f.storage.film.FilmDbStorage      &amp#27;[0;39m &amp#27;[2m:&amp#27;[0;39m Запрос create > Film(id=2, name=Фильм2, description=Описание2, releaseDate=2000-12-28, duration=100, likes=[], genres=[Genre(id=1, name=null)], directors=null, mpa=Rating(id=1, name=), idD=0) --> INSERT INTO FILMORATE_SHEMA.FILMS (ID_RATE, DURATION, RELEASE_DATE, DESCRIPTION, NAME_FILMS) VALUES (?,?,CAST (? AS DATE),?,?)
&amp#27;[2m2023-06-02 05:41:35.896&amp#27;[0;39m &amp#27;[32m INFO&amp#27;[0;39m &amp#27;[35m3908&amp#27;[0;39m &amp#27;[2m---&amp#27;[0;39m &amp#27;[2m[           main]&amp#27;[0;39m &amp#27;[36mr.y.p.f.storage.film.FilmDbStorage      &amp#27;[0;39m &amp#27;[2m:&amp#27;[0;39m Результат create film > Film(id=2, name=Фильм2, description=Описание2, releaseDate=2000-12-28, duration=100, likes=[], genres=[Genre(id=1, name=Комедия)], directors=null, mpa=Rating(id=1, name=), idD=0) 
&amp#27;[2m2023-06-02 05:41:35.897&amp#27;[0;39m &amp#27;[32m INFO&amp#27;[0;39m &amp#27;[35m3908&amp#27;[0;39m &amp#27;[2m---&amp#27;[0;39m &amp#27;[2m[           main]&amp#27;[0;39m &amp#27;[36mr.y.p.f.storage.user.UserDbStorage      &amp#27;[0;39m &amp#27;[2m:&amp#27;[0;39m Запрос create > User(id=1, login=Логин1, email=test@qq1.ru, birthday=1995-12-28, name=Имя1) --> INSERT INTO FILMORATE_SHEMA.USERS (NAME_USER, BIRTHDAY, EMAIL, LOGIN) VALUES (?,CAST (? AS DATE),?,?)
&amp#27;[2m2023-06-02 05:41:35.898&amp#27;[0;39m &amp#27;[32m INFO&amp#27;[0;39m &amp#27;[35m3908&amp#27;[0;39m &amp#27;[2m---&amp#27;[0;39m &amp#27;[2m[           main]&amp#27;[0;39m &amp#27;[36mr.y.p.f.storage.user.UserDbStorage      &amp#27;[0;39m &amp#27;[2m:&amp#27;[0;39m Запрос create > User(id=2, login=Логин2, email=test@qq2.ru, birthday=2000-12-28, name=Имя2) --> INSERT INTO FILMORATE_SHEMA.USERS (NAME_USER, BIRTHDAY, EMAIL, LOGIN) VALUES (?,CAST (? AS DATE),?,?)
&amp#27;[2m2023-06-02 05:41:35.899&amp#27;[0;39m &amp#27;[32m INFO&amp#27;[0;39m &amp#27;[35m3908&amp#27;[0;39m &amp#27;[2m---&amp#27;[0;39m &amp#27;[2m[           main]&amp#27;[0;39m &amp#27;[36mr.y.p.f.storage.film.FilmDbStorage      &amp#27;[0;39m &amp#27;[2m:&amp#27;[0;39m Запрос addLike > INSERT INTO FILMORATE_SHEMA.LIKES_SET (ID_FILM, ID_USER) VALUES (?, ?)
&amp#27;[2m2023-06-02 05:41:35.901&amp#27;[0;39m &amp#27;[32m INFO&amp#27;[0;39m &amp#27;[35m3908&amp#27;[0;39m &amp#27;[2m---&amp#27;[0;39m &amp#27;[2m[           main]&amp#27;[0;39m &amp#27;[36mr.y.p.f.storage.film.FilmDbStorage      &amp#27;[0;39m &amp#27;[2m:&amp#27;[0;39m Запрос getMaxPopularByYear > SELECT * FROM FILMORATE_SHEMA.FILMS AS f JOIN FILMORATE_SHEMA.LIKES_SET AS ls ON f.ID_FILM = ls.ID_FILM WHERE f.ID_FILM IN (SELECT ID_FILM FROM FILMORATE_SHEMA.FILMS WHERE YEAR(f.RELEASE_DATE) LIKE ?) GROUP BY f.ID_FILM ORDER BY COUNT(ls.ID_USER) desc LIMIT ?
&amp#27;[2m2023-06-02 05:41:35.905&amp#27;[0;39m &amp#27;[32m INFO&amp#27;[0;39m &amp#27;[35m3908&amp#27;[0;39m &amp#27;[2m---&amp#27;[0;39m &amp#27;[2m[           main]&amp#27;[0;39m &amp#27;[36mr.y.p.f.storage.film.FilmDbStorage      &amp#27;[0;39m &amp#27;[2m:&amp#27;[0;39m Запрос mapToFilm ResultSet > rs86: org.h2.result.LocalResult@1fbd5e0 columns: 9 rows: 1 pos: 0
&amp#27;[2m2023-06-02 05:41:35.907&amp#27;[0;39m &amp#27;[32m INFO&amp#27;[0;39m &amp#27;[35m3908&amp#27;[0;39m &amp#27;[2m---&amp#27;[0;39m &amp#27;[2m[           main]&amp#27;[0;39m &amp#27;[36mr.y.p.f.storage.film.GenreDbStorage     &amp#27;[0;39m &amp#27;[2m:&amp#27;[0;39m Запрос mapToGenre ResultSet > rs87: org.h2.result.LocalResult@135064ea columns: 4 rows: 1 pos: 0
&amp#27;[2m2023-06-02 05:41:35.910&amp#27;[0;39m &amp#27;[32m INFO&amp#27;[0;39m &amp#27;[35m3908&amp#27;[0;39m &amp#27;[2m---&amp#27;[0;39m &amp#27;[2m[           main]&amp#27;[0;39m &amp#27;[36mr.y.p.f.storage.film.GenreDbStorage     &amp#27;[0;39m &amp#27;[2m:&amp#27;[0;39m Запрос findGenreByIdFilm > SELECT * FROM FILMORATE_SHEMA.GENRE AS G JOIN FILMORATE_SHEMA.GENRE_SET AS GS ON G.ID=GS.ID WHERE GS.ID_FILM = ? -- [Genre(id=1, name=Комедия)] 
&amp#27;[2m2023-06-02 05:41:35.912&amp#27;[0;39m &amp#27;[32m INFO&amp#27;[0;39m &amp#27;[35m3908&amp#27;[0;39m &amp#27;[2m---&amp#27;[0;39m &amp#27;[2m[           main]&amp#27;[0;39m &amp#27;[36mr.y.p.f.storage.film.DirectorDBStorage  &amp#27;[0;39m &amp#27;[2m:&amp#27;[0;39m Запрос findGenreByIdFilm > SELECT * FROM FILMORATE_SHEMA.DIRECTOR_LIST AS DL JOIN FILMORATE_SHEMA.DIRECTOR AS D ON DL.ID_DIRECTOR = D.ID_DIRECTOR WHERE D.ID_FILM = ? -- [] 
&amp#27;[2m2023-06-02 05:41:35.913&amp#27;[0;39m &amp#27;[32m INFO&amp#27;[0;39m &amp#27;[35m3908&amp#27;[0;39m &amp#27;[2m---&amp#27;[0;39m &amp#27;[2m[           main]&amp#27;[0;39m &amp#27;[36mr.y.p.f.storage.film.FilmDbStorage      &amp#27;[0;39m &amp#27;[2m:&amp#27;[0;39m Запрос getLikes > SELECT ID_USER FROM FILMORATE_SHEMA.LIKES_SET WHERE ID_FILM = ?
&amp#27;[2m2023-06-02 05:41:35.919&amp#27;[0;39m &amp#27;[32m INFO&amp#27;[0;39m &amp#27;[35m3908&amp#27;[0;39m &amp#27;[2m---&amp#27;[0;39m &amp#27;[2m[           main]&amp#27;[0;39m &amp#27;[36mr.y.p.f.storage.film.FilmDbStorage      &amp#27;[0;39m &amp#27;[2m:&amp#27;[0;39m Collection > [Film(id=2, name=Фильм2, description=Описание2, releaseDate=2000-12-28, duration=100, likes=[1], genres=[Genre(id=1, name=Комедия)], directors=[], mpa=Rating(id=1, name=), idD=0)]
]]></system-out>
  </testcase>
  <testcase name="findMostPopularsAllTest" classname="ru.yandex.practicum.filmorate.MostPopularIntegrationTest" time="0.103">
    <failure message="expected: &lt;[Film(id=2, name=Фильм2, description=Описание2, releaseDate=2000-12-28, duration=100, likes=[1], genres=[Genre(id=1, name=Комедия)], directors=[], mpa=Rating(id=1, name=), idD=0), Film(id=1, name=Фильм1, description=Описание1, releaseDate=1995-12-28, duration=50, likes=[], genres=[Genre(id=1, name=Комедия)], directors=[], mpa=Rating(id=1, name=), idD=0)]&gt; but was: &lt;[Film(id=2, name=Фильм2, description=Описание2, releaseDate=2000-12-28, duration=100, likes=[], genres=[Genre(id=1, name=Комедия)], directors=null, mpa=Rating(id=1, name=), idD=0), Film(id=1, name=Фильм1, description=Описание1, releaseDate=1995-12-28, duration=50, likes=[], genres=[Genre(id=1, name=Комедия)], directors=null, mpa=Rating(id=1, name=), idD=0)]&gt;" type="org.opentest4j.AssertionFailedError"><![CDATA[org.opentest4j.AssertionFailedError: expected: <[Film(id=2, name=Фильм2, description=Описание2, releaseDate=2000-12-28, duration=100, likes=[1], genres=[Genre(id=1, name=Комедия)], directors=[], mpa=Rating(id=1, name=), idD=0), Film(id=1, name=Фильм1, description=Описание1, releaseDate=1995-12-28, duration=50, likes=[], genres=[Genre(id=1, name=Комедия)], directors=[], mpa=Rating(id=1, name=), idD=0)]> but was: <[Film(id=2, name=Фильм2, description=Описание2, releaseDate=2000-12-28, duration=100, likes=[], genres=[Genre(id=1, name=Комедия)], directors=null, mpa=Rating(id=1, name=), idD=0), Film(id=1, name=Фильм1, description=Описание1, releaseDate=1995-12-28, duration=50, likes=[], genres=[Genre(id=1, name=Комедия)], directors=null, mpa=Rating(id=1, name=), idD=0)]>
	at ru.yandex.practicum.filmorate.MostPopularIntegrationTest.findMostPopularsAllTest(MostPopularIntegrationTest.java:124)
]]></failure>
    <system-out><![CDATA[&amp#27;[2m2023-06-02 05:41:35.983&amp#27;[0;39m &amp#27;[32m INFO&amp#27;[0;39m &amp#27;[35m3908&amp#27;[0;39m &amp#27;[2m---&amp#27;[0;39m &amp#27;[2m[           main]&amp#27;[0;39m &amp#27;[36mr.y.p.f.storage.film.FilmDbStorage      &amp#27;[0;39m &amp#27;[2m:&amp#27;[0;39m Запрос create > Film(id=1, name=Фильм1, description=Описание1, releaseDate=1995-12-28, duration=50, likes=[], genres=[Genre(id=1, name=null)], directors=null, mpa=Rating(id=1, name=), idD=0) --> INSERT INTO FILMORATE_SHEMA.FILMS (ID_RATE, DURATION, RELEASE_DATE, DESCRIPTION, NAME_FILMS) VALUES (?,?,CAST (? AS DATE),?,?)
&amp#27;[2m2023-06-02 05:41:35.991&amp#27;[0;39m &amp#27;[32m INFO&amp#27;[0;39m &amp#27;[35m3908&amp#27;[0;39m &amp#27;[2m---&amp#27;[0;39m &amp#27;[2m[           main]&amp#27;[0;39m &amp#27;[36mr.y.p.f.storage.film.FilmDbStorage      &amp#27;[0;39m &amp#27;[2m:&amp#27;[0;39m Результат create film > Film(id=1, name=Фильм1, description=Описание1, releaseDate=1995-12-28, duration=50, likes=[], genres=[Genre(id=1, name=Комедия)], directors=null, mpa=Rating(id=1, name=), idD=0) 
&amp#27;[2m2023-06-02 05:41:35.994&amp#27;[0;39m &amp#27;[32m INFO&amp#27;[0;39m &amp#27;[35m3908&amp#27;[0;39m &amp#27;[2m---&amp#27;[0;39m &amp#27;[2m[           main]&amp#27;[0;39m &amp#27;[36mr.y.p.f.storage.film.FilmDbStorage      &amp#27;[0;39m &amp#27;[2m:&amp#27;[0;39m Запрос create > Film(id=2, name=Фильм2, description=Описание2, releaseDate=2000-12-28, duration=100, likes=[], genres=[Genre(id=1, name=null)], directors=null, mpa=Rating(id=1, name=), idD=0) --> INSERT INTO FILMORATE_SHEMA.FILMS (ID_RATE, DURATION, RELEASE_DATE, DESCRIPTION, NAME_FILMS) VALUES (?,?,CAST (? AS DATE),?,?)
&amp#27;[2m2023-06-02 05:41:36.003&amp#27;[0;39m &amp#27;[32m INFO&amp#27;[0;39m &amp#27;[35m3908&amp#27;[0;39m &amp#27;[2m---&amp#27;[0;39m &amp#27;[2m[           main]&amp#27;[0;39m &amp#27;[36mr.y.p.f.storage.film.FilmDbStorage      &amp#27;[0;39m &amp#27;[2m:&amp#27;[0;39m Результат create film > Film(id=2, name=Фильм2, description=Описание2, releaseDate=2000-12-28, duration=100, likes=[], genres=[Genre(id=1, name=Комедия)], directors=null, mpa=Rating(id=1, name=), idD=0) 
&amp#27;[2m2023-06-02 05:41:36.007&amp#27;[0;39m &amp#27;[32m INFO&amp#27;[0;39m &amp#27;[35m3908&amp#27;[0;39m &amp#27;[2m---&amp#27;[0;39m &amp#27;[2m[           main]&amp#27;[0;39m &amp#27;[36mr.y.p.f.storage.user.UserDbStorage      &amp#27;[0;39m &amp#27;[2m:&amp#27;[0;39m Запрос create > User(id=1, login=Логин1, email=test@qq1.ru, birthday=1995-12-28, name=Имя1) --> INSERT INTO FILMORATE_SHEMA.USERS (NAME_USER, BIRTHDAY, EMAIL, LOGIN) VALUES (?,CAST (? AS DATE),?,?)
&amp#27;[2m2023-06-02 05:41:36.012&amp#27;[0;39m &amp#27;[32m INFO&amp#27;[0;39m &amp#27;[35m3908&amp#27;[0;39m &amp#27;[2m---&amp#27;[0;39m &amp#27;[2m[           main]&amp#27;[0;39m &amp#27;[36mr.y.p.f.storage.user.UserDbStorage      &amp#27;[0;39m &amp#27;[2m:&amp#27;[0;39m Запрос create > User(id=2, login=Логин2, email=test@qq2.ru, birthday=2000-12-28, name=Имя2) --> INSERT INTO FILMORATE_SHEMA.USERS (NAME_USER, BIRTHDAY, EMAIL, LOGIN) VALUES (?,CAST (? AS DATE),?,?)
&amp#27;[2m2023-06-02 05:41:36.023&amp#27;[0;39m &amp#27;[32m INFO&amp#27;[0;39m &amp#27;[35m3908&amp#27;[0;39m &amp#27;[2m---&amp#27;[0;39m &amp#27;[2m[           main]&amp#27;[0;39m &amp#27;[36mr.y.p.f.storage.film.FilmDbStorage      &amp#27;[0;39m &amp#27;[2m:&amp#27;[0;39m Запрос addLike > INSERT INTO FILMORATE_SHEMA.LIKES_SET (ID_FILM, ID_USER) VALUES (?, ?)
&amp#27;[2m2023-06-02 05:41:36.025&amp#27;[0;39m &amp#27;[32m INFO&amp#27;[0;39m &amp#27;[35m3908&amp#27;[0;39m &amp#27;[2m---&amp#27;[0;39m &amp#27;[2m[           main]&amp#27;[0;39m &amp#27;[36mr.y.p.f.storage.film.FilmDbStorage      &amp#27;[0;39m &amp#27;[2m:&amp#27;[0;39m Запрос getMaxPopular > SELECT * FROM FILMORATE_SHEMA.FILMS AS f LEFT JOIN FILMORATE_SHEMA.LIKES_SET AS ls ON f.ID_FILM = ls.ID_FILM GROUP BY f.ID_FILM ORDER BY COUNT(ls.ID_USER) desc LIMIT ?
&amp#27;[2m2023-06-02 05:41:36.028&amp#27;[0;39m &amp#27;[32m INFO&amp#27;[0;39m &amp#27;[35m3908&amp#27;[0;39m &amp#27;[2m---&amp#27;[0;39m &amp#27;[2m[           main]&amp#27;[0;39m &amp#27;[36mr.y.p.f.storage.film.FilmDbStorage      &amp#27;[0;39m &amp#27;[2m:&amp#27;[0;39m Запрос mapToFilm ResultSet > rs98: org.h2.result.LocalResult@428eb3d5 columns: 9 rows: 2 pos: 0
&amp#27;[2m2023-06-02 05:41:36.030&amp#27;[0;39m &amp#27;[32m INFO&amp#27;[0;39m &amp#27;[35m3908&amp#27;[0;39m &amp#27;[2m---&amp#27;[0;39m &amp#27;[2m[           main]&amp#27;[0;39m &amp#27;[36mr.y.p.f.storage.film.GenreDbStorage     &amp#27;[0;39m &amp#27;[2m:&amp#27;[0;39m Запрос mapToGenre ResultSet > rs99: org.h2.result.LocalResult@3fd5d679 columns: 4 rows: 1 pos: 0
&amp#27;[2m2023-06-02 05:41:36.031&amp#27;[0;39m &amp#27;[32m INFO&amp#27;[0;39m &amp#27;[35m3908&amp#27;[0;39m &amp#27;[2m---&amp#27;[0;39m &amp#27;[2m[           main]&amp#27;[0;39m &amp#27;[36mr.y.p.f.storage.film.GenreDbStorage     &amp#27;[0;39m &amp#27;[2m:&amp#27;[0;39m Запрос findGenreByIdFilm > SELECT * FROM FILMORATE_SHEMA.GENRE AS G JOIN FILMORATE_SHEMA.GENRE_SET AS GS ON G.ID=GS.ID WHERE GS.ID_FILM = ? -- [Genre(id=1, name=Комедия)] 
&amp#27;[2m2023-06-02 05:41:36.063&amp#27;[0;39m &amp#27;[32m INFO&amp#27;[0;39m &amp#27;[35m3908&amp#27;[0;39m &amp#27;[2m---&amp#27;[0;39m &amp#27;[2m[           main]&amp#27;[0;39m &amp#27;[36mr.y.p.f.storage.film.DirectorDBStorage  &amp#27;[0;39m &amp#27;[2m:&amp#27;[0;39m Запрос findGenreByIdFilm > SELECT * FROM FILMORATE_SHEMA.DIRECTOR_LIST AS DL JOIN FILMORATE_SHEMA.DIRECTOR AS D ON DL.ID_DIRECTOR = D.ID_DIRECTOR WHERE D.ID_FILM = ? -- [] 
&amp#27;[2m2023-06-02 05:41:36.064&amp#27;[0;39m &amp#27;[32m INFO&amp#27;[0;39m &amp#27;[35m3908&amp#27;[0;39m &amp#27;[2m---&amp#27;[0;39m &amp#27;[2m[           main]&amp#27;[0;39m &amp#27;[36mr.y.p.f.storage.film.FilmDbStorage      &amp#27;[0;39m &amp#27;[2m:&amp#27;[0;39m Запрос getLikes > SELECT ID_USER FROM FILMORATE_SHEMA.LIKES_SET WHERE ID_FILM = ?
&amp#27;[2m2023-06-02 05:41:36.067&amp#27;[0;39m &amp#27;[32m INFO&amp#27;[0;39m &amp#27;[35m3908&amp#27;[0;39m &amp#27;[2m---&amp#27;[0;39m &amp#27;[2m[           main]&amp#27;[0;39m &amp#27;[36mr.y.p.f.storage.film.FilmDbStorage      &amp#27;[0;39m &amp#27;[2m:&amp#27;[0;39m Запрос mapToFilm ResultSet > rs98: org.h2.result.LocalResult@428eb3d5 columns: 9 rows: 2 pos: 1
&amp#27;[2m2023-06-02 05:41:36.070&amp#27;[0;39m &amp#27;[32m INFO&amp#27;[0;39m &amp#27;[35m3908&amp#27;[0;39m &amp#27;[2m---&amp#27;[0;39m &amp#27;[2m[           main]&amp#27;[0;39m &amp#27;[36mr.y.p.f.storage.film.GenreDbStorage     &amp#27;[0;39m &amp#27;[2m:&amp#27;[0;39m Запрос mapToGenre ResultSet > rs102: org.h2.result.LocalResult@6dbbdf92 columns: 4 rows: 1 pos: 0
&amp#27;[2m2023-06-02 05:41:36.071&amp#27;[0;39m &amp#27;[32m INFO&amp#27;[0;39m &amp#27;[35m3908&amp#27;[0;39m &amp#27;[2m---&amp#27;[0;39m &amp#27;[2m[           main]&amp#27;[0;39m &amp#27;[36mr.y.p.f.storage.film.GenreDbStorage     &amp#27;[0;39m &amp#27;[2m:&amp#27;[0;39m Запрос findGenreByIdFilm > SELECT * FROM FILMORATE_SHEMA.GENRE AS G JOIN FILMORATE_SHEMA.GENRE_SET AS GS ON G.ID=GS.ID WHERE GS.ID_FILM = ? -- [Genre(id=1, name=Комедия)] 
&amp#27;[2m2023-06-02 05:41:36.072&amp#27;[0;39m &amp#27;[32m INFO&amp#27;[0;39m &amp#27;[35m3908&amp#27;[0;39m &amp#27;[2m---&amp#27;[0;39m &amp#27;[2m[           main]&amp#27;[0;39m &amp#27;[36mr.y.p.f.storage.film.DirectorDBStorage  &amp#27;[0;39m &amp#27;[2m:&amp#27;[0;39m Запрос findGenreByIdFilm > SELECT * FROM FILMORATE_SHEMA.DIRECTOR_LIST AS DL JOIN FILMORATE_SHEMA.DIRECTOR AS D ON DL.ID_DIRECTOR = D.ID_DIRECTOR WHERE D.ID_FILM = ? -- [] 
&amp#27;[2m2023-06-02 05:41:36.073&amp#27;[0;39m &amp#27;[32m INFO&amp#27;[0;39m &amp#27;[35m3908&amp#27;[0;39m &amp#27;[2m---&amp#27;[0;39m &amp#27;[2m[           main]&amp#27;[0;39m &amp#27;[36mr.y.p.f.storage.film.FilmDbStorage      &amp#27;[0;39m &amp#27;[2m:&amp#27;[0;39m Запрос getLikes > SELECT ID_USER FROM FILMORATE_SHEMA.LIKES_SET WHERE ID_FILM = ?
&amp#27;[2m2023-06-02 05:41:36.078&amp#27;[0;39m &amp#27;[32m INFO&amp#27;[0;39m &amp#27;[35m3908&amp#27;[0;39m &amp#27;[2m---&amp#27;[0;39m &amp#27;[2m[           main]&amp#27;[0;39m &amp#27;[36mr.y.p.f.storage.film.FilmDbStorage      &amp#27;[0;39m &amp#27;[2m:&amp#27;[0;39m Collection > [Film(id=2, name=Фильм2, description=Описание2, releaseDate=2000-12-28, duration=100, likes=[1], genres=[Genre(id=1, name=Комедия)], directors=[], mpa=Rating(id=1, name=), idD=0), Film(id=1, name=Фильм1, description=Описание1, releaseDate=1995-12-28, duration=50, likes=[], genres=[Genre(id=1, name=Комедия)], directors=[], mpa=Rating(id=1, name=), idD=0)]
]]></system-out>
  </testcase>
</testsuite>